
#include "stdafx.h"
#include "cv.h" 
#include "highgui.h" 
#include <stdio.h>


int main()
{
CvCapture* capture =0;       
capture = cvCaptureFromCAM(0);
IplImage* frame;
cvNamedWindow("window1");

int i,j,k,check=0,rahul[1000][2],z=0,x=0;
int height,width,step,channels,xcenter =0,ycenter =0;
int stepr, channelsr;
int temp=0;
uchar *data,*datar;

while(1)
{
frame = cvQueryFrame( capture );

IplImage *result=cvCreateImage( cvGetSize(frame), 8, 1 );
cvNamedWindow("Result");
stepr=result->widthStep;
channelsr=result->nChannels;
datar = (uchar *)result->imageData;

height = frame->height;
width = frame->width;
step =frame->widthStep;
channels = frame->nChannels;
data = (uchar *)frame->imageData;

i=j=k=0;
for(i=0;i < (height);i++) 
{
	for(j=0;j <(width);j++)
	{
		if(((data[i*step+j*channels+2]) > (60+data[i*step+j*channels]))
		&& ((data[i*step+j*channels+2]) > (60+data[i*step+j*channels+1])))
		datar[i*stepr+j*channelsr]=255;
		else
		datar[i*stepr+j*channelsr]=0;
	}
}

CvMoments moments;
cvMoments(result, &moments, 1);
double m00, m10, m01;

m00 = cvGetSpatialMoment(&moments, 0,0);	//it finds out the area
m10 = cvGetSpatialMoment(&moments, 1,0);	
m01 = cvGetSpatialMoment(&moments, 0,1);

// TBD check that m00 != 0
if (m00 != 0 && m00 > 10) {
int xcenter = m10/m00;
int ycenter = m01/m00;

cvCircle(result,cvPoint(int(xcenter),int(ycenter)), 10, cvScalar(255,255,255),2,8,0);
cvCircle(frame,cvPoint(int(xcenter),int(ycenter)), 10, CV_RGB(0, 255, 0),2,8,0);
rahul[check][0]=xcenter;
rahul[check][1]=ycenter;
check++;
printf("%d,%d\n",xcenter,ycenter);
for(i=0;i<check-1;i++)
{
	cvLine( frame, cvPoint( rahul[i][0],rahul[i][1]), cvPoint( rahul[i+1][0], rahul[i+1][1] ), CV_RGB(255, 0, 0),2,8);

	if(((xcenter-rahul[1][0])>20 || (xcenter-rahul[1][0])<(-20)) && ((ycenter-rahul[1][1])>20 || (ycenter-rahul[1][1])<(-20)))
	{
//		printf("new-%d,%d,old-%d,%d\n",rahul[i][0],rahul[i][1],rahul[1][0],rahul[1][1]);
		z++;
	}
	if(z>0 && ((xcenter-rahul[0][0])<10 && (xcenter-rahul[0][0])>(-10)) && ((ycenter-rahul[0][1])<10 && (ycenter-rahul[0][1])>(-10)))
	{
		printf("new-%d,%d,old-%d,%d\n",xcenter,ycenter,rahul[1][0],rahul[1][1]);
		for(j=1;j<check;j++)
		{
			cvLine( frame, cvPoint( rahul[j][0],rahul[j][1]), cvPoint( rahul[j-1][0], rahul[j-1][1] ), CV_RGB(0, 0, 255),2,8);
		}
		cvLine( frame, cvPoint( rahul[0][0],rahul[0][1]), cvPoint( rahul[j-1][0], rahul[j-1][1] ), CV_RGB(0, 0, 255),2,8);
		x=1;
		break;
	}
}
if((check%200)==0)
{
	printf("%d",check);
	z=0;
	check=0;
}

}
cvShowImage("window1",frame);
cvShowImage("Result",result);
if(x>0)
{
	break;
}
cvWaitKey(100);
}

cvShowImage("window1",frame);
cvWaitKey(1000);
cvReleaseCapture( &capture );
 cvDestroyWindow( "window1" );
 cvDestroyWindow("Result");
 return 0;
}
